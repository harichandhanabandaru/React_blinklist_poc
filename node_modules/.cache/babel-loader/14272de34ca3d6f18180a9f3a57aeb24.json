{"ast":null,"code":"var _jsxFileName = \"/home/haricb/React_blinklist_poc/src/components/molecules/enterpreneurship/GridOne.tsx\";\nimport { Grid } from \"@mui/material\";\nimport React from \"react\";\nimport Card from \"../Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction GridOne() {\n  const array = require(\"../../../data.json\");\n\n  let displayBooks = JSON.parse(JSON.stringify(sessionStorage.getItem(\"displayBooks\")));\n  console.log(displayBooks);\n  const cards = array[\"books\"].filter(book => displayBooks.includes(parseInt(book.coverImage)) && array[\"trendingBlinks\"].indexOf(book.title) > -1).map(book => {\n    const Image = require(\"../../../images/\" + book.coverImage + \".svg\");\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: book.coverImage,\n      style: {\n        display: \"inline-block\",\n        padding: \"5% 0% 5% 8%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        image: Image,\n        title: book.title,\n        author: book.author,\n        timeToRead: book.timeToRead,\n        id: book.coverImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = GridOne;\nexport default GridOne;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridOne\");","map":{"version":3,"sources":["/home/haricb/React_blinklist_poc/src/components/molecules/enterpreneurship/GridOne.tsx"],"names":["Grid","React","Card","GridOne","array","require","displayBooks","JSON","parse","stringify","sessionStorage","getItem","console","log","cards","filter","book","includes","parseInt","coverImage","indexOf","title","map","Image","display","padding","author","timeToRead"],"mappings":";AAAA,SAASA,IAAT,QAAqB,eAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;;;AAUA,SAASC,OAAT,GAAmB;AACjB,QAAMC,KAAK,GAAEC,OAAO,CAAC,oBAAD,CAApB;;AACA,MAAIC,YAAqB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeC,cAAc,CAACC,OAAf,CAAuB,cAAvB,CAAf,CAAX,CAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACA,QAAMQ,KAAK,GAAGV,KAAK,CAAC,OAAD,CAAL,CACXW,MADW,CAETC,IAAD,IACEV,YAAY,CAACW,QAAb,CAAsBC,QAAQ,CAACF,IAAI,CAACG,UAAN,CAA9B,KACAf,KAAK,CAAC,gBAAD,CAAL,CAAwBgB,OAAxB,CAAgCJ,IAAI,CAACK,KAArC,IAA8C,CAAC,CAJvC,EAMXC,GANW,CAMNN,IAAD,IAAqB;AACxB,UAAMO,KAAK,GAAGlB,OAAO,CAAC,qBAAqBW,IAAI,CAACG,UAA1B,GAAuC,MAAxC,CAArB;;AACA,wBACE;AACE,MAAA,EAAE,EAAEH,IAAI,CAACG,UADX;AAEE,MAAA,KAAK,EAAE;AAAEK,QAAAA,OAAO,EAAE,cAAX;AAA2BC,QAAAA,OAAO,EAAE;AAApC,OAFT;AAAA,6BAIE,QAAC,IAAD;AACE,QAAA,KAAK,EAAEF,KADT;AAEE,QAAA,KAAK,EAAEP,IAAI,CAACK,KAFd;AAGE,QAAA,MAAM,EAAEL,IAAI,CAACU,MAHf;AAIE,QAAA,UAAU,EAAEV,IAAI,CAACW,UAJnB;AAKE,QAAA,EAAE,EAAEX,IAAI,CAACG;AALX;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YADF;AAcD,GAtBW,CAAd;AAuBA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,gBAAiBL;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD;;KAhCQX,O;AAkCT,eAAeA,OAAf","sourcesContent":["import { Grid } from \"@mui/material\";\nimport React from \"react\";\nimport Card from \"../Card\";\n\ninterface bookProps {\n  title: string;\n  author: string;\n  timeToRead: string;\n  coverImage: string;\n  finishedReading: boolean;\n}\n\nfunction GridOne() {\n  const array= require(\"../../../data.json\");\n  let displayBooks:number[] = JSON.parse(JSON.stringify(sessionStorage.getItem(\"displayBooks\")));\n  console.log(displayBooks);\n  const cards = array[\"books\"]\n    .filter(\n      (book: bookProps) =>\n        displayBooks.includes(parseInt(book.coverImage)) &&\n        array[\"trendingBlinks\"].indexOf(book.title) > -1\n    )\n    .map((book: bookProps) => {\n      const Image = require(\"../../../images/\" + book.coverImage + \".svg\");\n      return (\n        <div\n          id={book.coverImage}\n          style={{ display: \"inline-block\", padding: \"5% 0% 5% 8%\" }}\n        >\n          <Card\n            image={Image}\n            title={book.title}\n            author={book.author}\n            timeToRead={book.timeToRead}\n            id={book.coverImage}\n          />\n        </div>\n      );\n    });\n  return (\n    <>\n      <Grid container>{cards}</Grid>\n    </>\n  );\n}\n\nexport default GridOne;\n"]},"metadata":{},"sourceType":"module"}