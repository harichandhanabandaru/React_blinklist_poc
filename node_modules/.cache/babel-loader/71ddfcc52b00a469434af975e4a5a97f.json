{"ast":null,"code":"var _jsxFileName = \"/home/haricb/React_blinklist_poc/src/components/molecules/CardGrid.tsx\";\nimport { Grid } from \"@mui/material\";\nimport Card from \"./Card\";\nimport Footer from \"../organisms/footer/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CardGrid() {\n  const array1 = require(\"../../data.json\");\n\n  let currentTab = sessionStorage.getItem(\"libraryTab\") === \"current\" ? false : \"finished\" ? true : null;\n  let selectedCards = [];\n\n  if (currentTab === false) {\n    selectedCards = JSON.parse(sessionStorage.getItem(\"currentReading\") || \"[]\");\n  } else if (currentTab === true) {\n    selectedCards = JSON.parse(sessionStorage.getItem(\"finishedReading\") || \"[]\");\n  } else {\n    selectedCards = JSON.parse(sessionStorage.getItem(\"displayBooks\") || \"[]\");\n  }\n\n  const cards = array1[\"books\"].filter(book => selectedCards.includes(parseInt(book.coverImage))).map(book => {\n    console.log(book.coverImage);\n\n    const Image = require(\"../../images/\" + book.coverImage + \".svg\");\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: book.coverImage,\n      style: {\n        display: \"inline-block\",\n        padding: \"5% 0% 5% 8%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        image: Image,\n        title: book.title,\n        author: book.author,\n        timeToRead: book.timeToRead,\n        id: book.coverImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      rowSpacing: 4,\n      columnSpacing: {\n        xs: 1,\n        sm: 2,\n        md: 2\n      },\n      children: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = CardGrid;\nexport default CardGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardGrid\");","map":{"version":3,"sources":["/home/haricb/React_blinklist_poc/src/components/molecules/CardGrid.tsx"],"names":["Grid","Card","Footer","CardGrid","array1","require","currentTab","sessionStorage","getItem","selectedCards","JSON","parse","cards","filter","book","includes","parseInt","coverImage","map","console","log","Image","display","padding","title","author","timeToRead","xs","sm","md"],"mappings":";AAAA,SAASA,IAAT,QAAqB,eAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;;;AAUA,SAASC,QAAT,GAAoB;AAClB,QAAMC,MAAM,GAAGC,OAAO,CAAC,iBAAD,CAAtB;;AACA,MAAIC,UAAU,GACZC,cAAc,CAACC,OAAf,CAAuB,YAAvB,MAAyC,SAAzC,GACI,KADJ,GAEI,aACA,IADA,GAEA,IALN;AAMA,MAAIC,aAAuB,GAAG,EAA9B;;AACA,MAAIH,UAAU,KAAK,KAAnB,EAA0B;AACtBG,IAAAA,aAAa,GAAGC,IAAI,CAACC,KAAL,CACdJ,cAAc,CAACC,OAAf,CAAuB,gBAAvB,KAA4C,IAD9B,CAAhB;AAGH,GAJD,MAKK,IAAIF,UAAU,KAAK,IAAnB,EAAyB;AAC1BG,IAAAA,aAAa,GAAGC,IAAI,CAACC,KAAL,CACdJ,cAAc,CAACC,OAAf,CAAuB,iBAAvB,KAA6C,IAD/B,CAAhB;AAIH,GALI,MAOJ;AAAEC,IAAAA,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWJ,cAAc,CAACC,OAAf,CAAuB,cAAvB,KAA0C,IAArD,CAAhB;AAA4E;;AAG/E,QAAMI,KAAK,GAAGR,MAAM,CAAC,OAAD,CAAN,CACXS,MADW,CACHC,IAAD,IACNL,aAAa,CAACM,QAAd,CAAuBC,QAAQ,CAACF,IAAI,CAACG,UAAN,CAA/B,CAFU,EAIXC,GAJW,CAINJ,IAAD,IAAqB;AACxBK,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACG,UAAjB;;AACA,UAAMI,KAAK,GAAGhB,OAAO,CAAC,kBAAkBS,IAAI,CAACG,UAAvB,GAAoC,MAArC,CAArB;;AACA,wBACE;AACE,MAAA,EAAE,EAAEH,IAAI,CAACG,UADX;AAEE,MAAA,KAAK,EAAE;AAAEK,QAAAA,OAAO,EAAE,cAAX;AAA2BC,QAAAA,OAAO,EAAE;AAApC,OAFT;AAAA,6BAIE,QAAC,IAAD;AACE,QAAA,KAAK,EAAEF,KADT;AAEE,QAAA,KAAK,EAAEP,IAAI,CAACU,KAFd;AAGE,QAAA,MAAM,EAAEV,IAAI,CAACW,MAHf;AAIE,QAAA,UAAU,EAAEX,IAAI,CAACY,UAJnB;AAKE,QAAA,EAAE,EAAEZ,IAAI,CAACG;AALX;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YADF;AAcD,GArBW,CAAd;AAuBA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,UAAU,EAAE,CAA5B;AAA+B,MAAA,aAAa,EAAE;AAAEU,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,EAAE,EAAE,CAAb;AAAgBC,QAAAA,EAAE,EAAE;AAApB,OAA9C;AAAA,gBACGjB;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD;;KAxDQT,Q;AA0DT,eAAeA,QAAf","sourcesContent":["import { Grid } from \"@mui/material\";\nimport Card from \"./Card\";\nimport Footer from \"../organisms/footer/Footer\";\n\ninterface bookProps {\n  title: string;\n  author: string;\n  timeToRead: string;\n  coverImage: string;\n  finishedReading: boolean;\n}\n\nfunction CardGrid() {\n  const array1 = require(\"../../data.json\");\n  let currentTab =\n    sessionStorage.getItem(\"libraryTab\") === \"current\"\n      ? false\n      : \"finished\"\n      ? true\n      : null;\n  let selectedCards: number[] = [];\n  if (currentTab === false) {\n      selectedCards = JSON.parse(\n        sessionStorage.getItem(\"currentReading\") || \"[]\"\n      );\n  } \n  else if (currentTab === true) {\n      selectedCards = JSON.parse(\n        sessionStorage.getItem(\"finishedReading\") || \"[]\"\n      );\n\n  }\nelse\n   { selectedCards = JSON.parse(sessionStorage.getItem(\"displayBooks\") || \"[]\");}\n\n\n  const cards = array1[\"books\"]\n    .filter((book: bookProps) =>\n      selectedCards.includes(parseInt(book.coverImage))\n    )\n    .map((book: bookProps) => {\n      console.log(book.coverImage);\n      const Image = require(\"../../images/\" + book.coverImage + \".svg\");\n      return (\n        <div\n          id={book.coverImage}\n          style={{ display: \"inline-block\", padding: \"5% 0% 5% 8%\" }}\n        >\n          <Card\n            image={Image}\n            title={book.title}\n            author={book.author}\n            timeToRead={book.timeToRead}\n            id={book.coverImage}\n          />\n        </div>\n      );\n    });\n\n  return (\n    <>\n      <Grid container rowSpacing={4} columnSpacing={{ xs: 1, sm: 2, md: 2 }}>\n        {cards}\n      </Grid>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default CardGrid;\n"]},"metadata":{},"sourceType":"module"}