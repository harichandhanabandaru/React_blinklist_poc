{"ast":null,"code":"export const searchCard = input => {\n  if (input.length <= 0) return;\n  input = input.toLowerCase();\n\n  const json = require(\"../../../data.json\");\n\n  let cardNames = [...json[\"trendingBlinks\"], ...json[\"justAdded\"], ...json[\"featured\"]];\n\n  for (let i = 0; i < json[\"books\"].length; i++) {\n    if (cardNames.includes(json[\"books\"][i].title)) {\n      if (!json[\"books\"][i].author.toLowerCase().includes(input) && !json[\"books\"][i].title.toLowerCase().includes(input)) {\n        let card = document.getElementById(json[\"books\"][i].coverImage);\n        if (card !== null) card.style.display = \"none\";\n      } else {\n        let card = document.getElementById(json[\"books\"][i].coverImage);\n        if (card !== null) card.style.display = \"inline-block\";\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/home/haricb/React_blinklist_poc/src/components/molecules/enterpreneurship/searchCard.tsx"],"names":["searchCard","input","length","toLowerCase","json","require","cardNames","i","includes","title","author","card","document","getElementById","coverImage","style","display"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,KAAD,IAAmB;AAC3C,MAAIA,KAAK,CAACC,MAAN,IAAgB,CAApB,EAAuB;AACvBD,EAAAA,KAAK,GAAGA,KAAK,CAACE,WAAN,EAAR;;AACA,QAAMC,IAAI,GAAGC,OAAO,CAAC,oBAAD,CAApB;;AAEA,MAAIC,SAAe,GAAG,CACpB,GAAGF,IAAI,CAAC,gBAAD,CADa,EAEpB,GAAGA,IAAI,CAAC,WAAD,CAFa,EAGpB,GAAGA,IAAI,CAAC,UAAD,CAHa,CAAtB;;AAMA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAAC,OAAD,CAAJ,CAAcF,MAAlC,EAA0CK,CAAC,EAA3C,EAA+C;AAC7C,QAAID,SAAS,CAACE,QAAV,CAAmBJ,IAAI,CAAC,OAAD,CAAJ,CAAcG,CAAd,EAAiBE,KAApC,CAAJ,EAAgD;AAC9C,UACE,CAACL,IAAI,CAAC,OAAD,CAAJ,CAAcG,CAAd,EAAiBG,MAAjB,CAAwBP,WAAxB,GAAsCK,QAAtC,CAA+CP,KAA/C,CAAD,IACA,CAACG,IAAI,CAAC,OAAD,CAAJ,CAAcG,CAAd,EAAiBE,KAAjB,CAAuBN,WAAvB,GAAqCK,QAArC,CAA8CP,KAA9C,CAFH,EAGE;AACA,YAAIU,IAAI,GAAGC,QAAQ,CAACC,cAAT,CACTT,IAAI,CAAC,OAAD,CAAJ,CAAcG,CAAd,EAAiBO,UADR,CAAX;AAGA,YAAIH,IAAI,KAAK,IAAb,EAAmBA,IAAI,CAACI,KAAL,CAAWC,OAAX,GAAqB,MAArB;AACpB,OARD,MAQO;AACL,YAAIL,IAAI,GAAGC,QAAQ,CAACC,cAAT,CACTT,IAAI,CAAC,OAAD,CAAJ,CAAcG,CAAd,EAAiBO,UADR,CAAX;AAIA,YAAIH,IAAI,KAAK,IAAb,EAAmBA,IAAI,CAACI,KAAL,CAAWC,OAAX,GAAqB,cAArB;AACpB;AACF;AACF;AAEF,CA/BM","sourcesContent":["export const searchCard = (input: string) => {\n  if (input.length <= 0) return \n  input = input.toLowerCase();\n  const json = require(\"../../../data.json\");\n\n  let cardNames:any[] = [\n    ...json[\"trendingBlinks\"],\n    ...json[\"justAdded\"],\n    ...json[\"featured\"],\n  ];\n\n  for (let i = 0; i < json[\"books\"].length; i++) {\n    if (cardNames.includes(json[\"books\"][i].title)) {\n      if (\n        !json[\"books\"][i].author.toLowerCase().includes(input) &&\n        !json[\"books\"][i].title.toLowerCase().includes(input)\n      ) {\n        let card = document.getElementById(\n          json[\"books\"][i].coverImage\n        ) as HTMLElement;\n        if (card !== null) card.style.display = \"none\";\n      } else {\n        let card = document.getElementById(\n          json[\"books\"][i].coverImage\n        ) as HTMLElement;\n\n        if (card !== null) card.style.display = \"inline-block\";\n      }\n    }\n  }\n\n};\n"]},"metadata":{},"sourceType":"module"}